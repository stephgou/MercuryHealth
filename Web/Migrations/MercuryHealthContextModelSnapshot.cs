// <auto-generated />
using System;
using MercuryHealthCore.Data.MercuryHealthDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MercuryHealthCore.Migrations
{
    [DbContext(typeof(MercuryHealthContext))]
    partial class MercuryHealthContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MercuryHealthCore.DomainModel.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Equipment");

                    b.Property<Guid?>("ExerciseId");

                    b.Property<string>("MusclesInvolved");

                    b.Property<string>("Name");

                    b.Property<string>("VideoUrl");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("MercuryHealthCore.DomainModel.FoodLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calories");

                    b.Property<decimal>("CarbohydratesInGrams");

                    b.Property<string>("Color");

                    b.Property<string>("Description");

                    b.Property<decimal>("FatInGrams");

                    b.Property<DateTime>("MealTime");

                    b.Property<int?>("MemberProfileId");

                    b.Property<decimal>("ProteinInGrams");

                    b.Property<float>("Quantity");

                    b.Property<decimal>("SodiumInGrams");

                    b.Property<string>("Tags");

                    b.HasKey("Id");

                    b.HasIndex("MemberProfileId");

                    b.ToTable("FoodLogEntries");
                });

            modelBuilder.Entity("MercuryHealthCore.DomainModel.MemberProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bio");

                    b.Property<DateTime>("Birthdate");

                    b.Property<int>("Gender");

                    b.Property<int>("HeightInCentimeters");

                    b.Property<int>("WeightInKilograms");

                    b.HasKey("Id");

                    b.ToTable("MemberProfile");
                });

            modelBuilder.Entity("MercuryHealthCore.DomainModel.Exercise", b =>
                {
                    b.HasOne("MercuryHealthCore.DomainModel.Exercise")
                        .WithMany("RelatedExercises")
                        .HasForeignKey("ExerciseId");
                });

            modelBuilder.Entity("MercuryHealthCore.DomainModel.FoodLogEntry", b =>
                {
                    b.HasOne("MercuryHealthCore.DomainModel.MemberProfile", "MemberProfile")
                        .WithMany()
                        .HasForeignKey("MemberProfileId");
                });
#pragma warning restore 612, 618
        }
    }
}
